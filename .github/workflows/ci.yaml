name: Build checks
on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
jobs:
  check:
    name: Test compilation
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        rust:
          - stable
          #- beta
          #- nightly
        os:
          - ubuntu-latest
          - windows-latest
          #- macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ matrix.os }}-cargo-${{ matrix.rust }}-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: 6.6.*
      - uses: actions-rs/cargo@v1
        with:
          command: check
  test:
    needs: check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ubuntu-latest-cargo-nightly-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: 6.6.*
      - uses: actions-rs/cargo@v1
        with:
          command: test
  rustfmt:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ubuntu-latest-cargo-nightly-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
  clippy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ubuntu-latest-cargo-nightly-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: clippy
      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: 6.6.*
      - uses: actions-rs/cargo@v1
        with:
          command: install
          args: clippy-sarif sarif-fmt
      - run: cargo clippy --message-format=json -- $CLIPPY_FLAGS -A dead_code -A unused_variables | clippy-sarif | tee rust-clippy-results.sarif | sarif-fmt
        continue-on-error: true
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- ${{ env.CLIPPY_FLAGS }}
  docs:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ubuntu-latest-cargo-nightly-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: 6.6.*
      - uses: actions-rs/cargo@v1
        with:
          command: doc
      - run: |
          mkdir public
          mv target/doc public/rust
        if: github.ref == 'refs/heads/master'
      - name: Deploy to GitHub Pages
        uses: crazy-max/ghaction-github-pages@v4
        with:
          target_branch: gh-pages
          build_dir: public
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: (github.ref == 'refs/heads/master') && success()
  release:
    needs:
      - rustfmt
      - clippy
      - docs
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          #- macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ matrix.os }}-cargo-stable-${{ hashFiles('**/Cargo.lock') }}-release
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: 6.6.*
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      - uses: actions/upload-artifact@v4
        with:
          name: rachat-${{ matrix.os }}
          path: |
            target/release/rachat
            target/release/rachat.exe
          compression-level: 9
